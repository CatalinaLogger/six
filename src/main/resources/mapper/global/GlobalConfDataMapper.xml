<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maybe.global.dao.GlobalConfDataMapper">
  <resultMap id="BaseResultMap" type="com.maybe.global.model.GlobalConfData">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="conf_id" jdbcType="INTEGER" property="confId" />
    <result column="conf_code" jdbcType="VARCHAR" property="confCode" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="value" jdbcType="INTEGER" property="value" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="seq" jdbcType="INTEGER" property="seq" />
    <result column="operate_ip" jdbcType="VARCHAR" property="operateIp" />
    <result column="operate_id" jdbcType="INTEGER" property="operateId" />
    <result column="operate_name" jdbcType="VARCHAR" property="operateName" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, conf_id, conf_code, code, name, value, parent_id, level, seq, operate_ip, operate_id, 
    operate_name, operate_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from global_conf_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from global_conf_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.maybe.global.model.GlobalConfData">
    insert into global_conf_data (id, conf_id, conf_code, 
      code, name, value, 
      parent_id, level, seq, 
      operate_ip, operate_id, operate_name, 
      operate_time)
    values (#{id,jdbcType=INTEGER}, #{confId,jdbcType=INTEGER}, #{confCode,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{value,jdbcType=INTEGER}, 
      #{parentId,jdbcType=INTEGER}, #{level,jdbcType=VARCHAR}, #{seq,jdbcType=INTEGER}, 
      #{operateIp,jdbcType=VARCHAR}, #{operateId,jdbcType=INTEGER}, #{operateName,jdbcType=VARCHAR}, 
      #{operateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.maybe.global.model.GlobalConfData">
    insert into global_conf_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="confId != null">
        conf_id,
      </if>
      <if test="confCode != null">
        conf_code,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="value != null">
        value,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="seq != null">
        seq,
      </if>
      <if test="operateIp != null">
        operate_ip,
      </if>
      <if test="operateId != null">
        operate_id,
      </if>
      <if test="operateName != null">
        operate_name,
      </if>
      <if test="operateTime != null">
        operate_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="confId != null">
        #{confId,jdbcType=INTEGER},
      </if>
      <if test="confCode != null">
        #{confCode,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="seq != null">
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="operateIp != null">
        #{operateIp,jdbcType=VARCHAR},
      </if>
      <if test="operateId != null">
        #{operateId,jdbcType=INTEGER},
      </if>
      <if test="operateName != null">
        #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.maybe.global.model.GlobalConfData">
    update global_conf_data
    <set>
      <if test="confId != null">
        conf_id = #{confId,jdbcType=INTEGER},
      </if>
      <if test="confCode != null">
        conf_code = #{confCode,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="seq != null">
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="operateIp != null">
        operate_ip = #{operateIp,jdbcType=VARCHAR},
      </if>
      <if test="operateId != null">
        operate_id = #{operateId,jdbcType=INTEGER},
      </if>
      <if test="operateName != null">
        operate_name = #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maybe.global.model.GlobalConfData">
    update global_conf_data
    set conf_id = #{confId,jdbcType=INTEGER},
      conf_code = #{confCode,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      value = #{value,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      level = #{level,jdbcType=VARCHAR},
      seq = #{seq,jdbcType=INTEGER},
      operate_ip = #{operateIp,jdbcType=VARCHAR},
      operate_id = #{operateId,jdbcType=INTEGER},
      operate_name = #{operateName,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findByConfCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM global_conf_data
    WHERE conf_code = #{code,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByConfId" parameterType="java.lang.Integer">
    DELETE FROM global_conf_data
    WHERE conf_id = #{confId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByLevel" parameterType="java.lang.String">
    DELETE FROM global_conf_data
    WHERE level LIKE #{level,jdbcType=VARCHAR}
  </delete>
</mapper>